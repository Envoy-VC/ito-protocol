/** biome-ignore-all lint/style/useNamingConvention: safe */

/** biome-ignore-all lint/suspicious/noExplicitAny: safe  */

// @ts-nocheck

// This file was automatically generated by TanStack Router.
// You should NOT make any changes in this file as it will be overwritten.
// Additionally, you should also exclude this file from your linter and/or formatter to prevent it from being checked or modified.

import { Route as rootRouteImport } from "./app/__root";
import { Route as DashboardRouteRouteImport } from "./app/dashboard/route";
import { Route as IndexRouteImport } from "./app/index";
import { Route as DashboardIndexRouteImport } from "./app/dashboard/index";
import { Route as DashboardPoolRouteImport } from "./app/dashboard/pool";
import { Route as DashboardFaucetRouteImport } from "./app/dashboard/faucet";

const DashboardRouteRoute = DashboardRouteRouteImport.update({
  id: "/dashboard",
  path: "/dashboard",
  getParentRoute: () => rootRouteImport,
} as any);
const IndexRoute = IndexRouteImport.update({
  id: "/",
  path: "/",
  getParentRoute: () => rootRouteImport,
} as any);
const DashboardIndexRoute = DashboardIndexRouteImport.update({
  id: "/",
  path: "/",
  getParentRoute: () => DashboardRouteRoute,
} as any);
const DashboardPoolRoute = DashboardPoolRouteImport.update({
  id: "/pool",
  path: "/pool",
  getParentRoute: () => DashboardRouteRoute,
} as any);
const DashboardFaucetRoute = DashboardFaucetRouteImport.update({
  id: "/faucet",
  path: "/faucet",
  getParentRoute: () => DashboardRouteRoute,
} as any);

export interface FileRoutesByFullPath {
  "/": typeof IndexRoute;
  "/dashboard": typeof DashboardRouteRouteWithChildren;
  "/dashboard/faucet": typeof DashboardFaucetRoute;
  "/dashboard/pool": typeof DashboardPoolRoute;
  "/dashboard/": typeof DashboardIndexRoute;
}
export interface FileRoutesByTo {
  "/": typeof IndexRoute;
  "/dashboard/faucet": typeof DashboardFaucetRoute;
  "/dashboard/pool": typeof DashboardPoolRoute;
  "/dashboard": typeof DashboardIndexRoute;
}
export interface FileRoutesById {
  __root__: typeof rootRouteImport;
  "/": typeof IndexRoute;
  "/dashboard": typeof DashboardRouteRouteWithChildren;
  "/dashboard/faucet": typeof DashboardFaucetRoute;
  "/dashboard/pool": typeof DashboardPoolRoute;
  "/dashboard/": typeof DashboardIndexRoute;
}
export interface FileRouteTypes {
  fileRoutesByFullPath: FileRoutesByFullPath;
  fullPaths:
    | "/"
    | "/dashboard"
    | "/dashboard/faucet"
    | "/dashboard/pool"
    | "/dashboard/";
  fileRoutesByTo: FileRoutesByTo;
  to: "/" | "/dashboard/faucet" | "/dashboard/pool" | "/dashboard";
  id:
    | "__root__"
    | "/"
    | "/dashboard"
    | "/dashboard/faucet"
    | "/dashboard/pool"
    | "/dashboard/";
  fileRoutesById: FileRoutesById;
}
export interface RootRouteChildren {
  IndexRoute: typeof IndexRoute;
  DashboardRouteRoute: typeof DashboardRouteRouteWithChildren;
}

declare module "@tanstack/react-router" {
  interface FileRoutesByPath {
    "/dashboard": {
      id: "/dashboard";
      path: "/dashboard";
      fullPath: "/dashboard";
      preLoaderRoute: typeof DashboardRouteRouteImport;
      parentRoute: typeof rootRouteImport;
    };
    "/": {
      id: "/";
      path: "/";
      fullPath: "/";
      preLoaderRoute: typeof IndexRouteImport;
      parentRoute: typeof rootRouteImport;
    };
    "/dashboard/": {
      id: "/dashboard/";
      path: "/";
      fullPath: "/dashboard/";
      preLoaderRoute: typeof DashboardIndexRouteImport;
      parentRoute: typeof DashboardRouteRoute;
    };
    "/dashboard/pool": {
      id: "/dashboard/pool";
      path: "/pool";
      fullPath: "/dashboard/pool";
      preLoaderRoute: typeof DashboardPoolRouteImport;
      parentRoute: typeof DashboardRouteRoute;
    };
    "/dashboard/faucet": {
      id: "/dashboard/faucet";
      path: "/faucet";
      fullPath: "/dashboard/faucet";
      preLoaderRoute: typeof DashboardFaucetRouteImport;
      parentRoute: typeof DashboardRouteRoute;
    };
  }
}

interface DashboardRouteRouteChildren {
  DashboardFaucetRoute: typeof DashboardFaucetRoute;
  DashboardPoolRoute: typeof DashboardPoolRoute;
  DashboardIndexRoute: typeof DashboardIndexRoute;
}

const DashboardRouteRouteChildren: DashboardRouteRouteChildren = {
  DashboardFaucetRoute: DashboardFaucetRoute,
  DashboardPoolRoute: DashboardPoolRoute,
  DashboardIndexRoute: DashboardIndexRoute,
};

const DashboardRouteRouteWithChildren = DashboardRouteRoute._addFileChildren(
  DashboardRouteRouteChildren,
);

const rootRouteChildren: RootRouteChildren = {
  IndexRoute: IndexRoute,
  DashboardRouteRoute: DashboardRouteRouteWithChildren,
};
export const routeTree = rootRouteImport
  ._addFileChildren(rootRouteChildren)
  ._addFileTypes<FileRouteTypes>();
